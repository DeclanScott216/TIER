workflows:
  ios_appstore:
    name: iOS App Store Workflow
    max_build_duration: 60

    environment:
      groups:
        - AppStoreConnect  # contains PRIVATE_KEY, KEY_ID, ISSUER_ID, BUNDLE_ID, APP_STORE_CONNECT_APPLE_ID
      flutter: stable
      xcode: latest
      cocoapods: default

    scripts:
      - name: Install dependencies
        script: |
          echo "üì¶ Installing Flutter dependencies..."
          flutter pub get
          cd ios || exit 1
          pod install --repo-update || true
          cd ..

      - name: Setup automatic iOS code signing
        script: |
          #!/usr/bin/env bash
          set -euo pipefail
          echo "üîê Setting up automatic iOS code signing..."

          # Ensure required environment variables
          : "${PRIVATE_KEY:?PRIVATE_KEY is not set}"
          : "${KEY_ID:?KEY_ID is not set}"
          : "${ISSUER_ID:?ISSUER_ID is not set}"
          : "${BUNDLE_ID:?BUNDLE_ID is not set}"

          # Decode base64 PEM and clean duplicates/CRLF
          printf "%s" "$PRIVATE_KEY" | base64 --decode | awk '!seen[$0]++' | sed 's/\r$//' > /tmp/AuthKey.p8
          echo "‚úÖ /tmp/AuthKey.p8 created"

          # Debug checks
          echo "----- FILE CHECK (first/last 6 lines) -----"
          head -n6 /tmp/AuthKey.p8 || true
          echo "..."
          tail -n6 /tmp/AuthKey.p8 || true
          echo "File size (bytes): $(wc -c < /tmp/AuthKey.p8)"
          echo "-------------------------------------------"

          # Validate structure
          if ! grep -q "^-----BEGIN PRIVATE KEY-----" /tmp/AuthKey.p8; then
            echo "‚ùå Missing BEGIN PRIVATE KEY line"
            exit 1
          fi
          if ! grep -q "^-----END PRIVATE KEY-----" /tmp/AuthKey.p8; then
            echo "‚ùå Missing END PRIVATE KEY line"
            exit 1
          fi

          # Keep only first PEM block (defensive)
          awk '/-----BEGIN PRIVATE KEY-----/{p=1} p{print} /-----END PRIVATE KEY-----/{p=0; exit}' /tmp/AuthKey.p8 > /tmp/AuthKey_clean.p8
          mv /tmp/AuthKey_clean.p8 /tmp/AuthKey.p8

          # Normalize newlines
          sed -i '' -e 's/\r$//' /tmp/AuthKey.p8 2>/dev/null || sed -i -e 's/\r$//' /tmp/AuthKey.p8 2>/dev/null || true

          echo "‚úÖ Final PEM preview:"
          sed -n '1,10p' /tmp/AuthKey.p8
          echo "..."

          # Verify PEM with OpenSSL if available
          if command -v openssl >/dev/null 2>&1; then
            if openssl pkcs8 -in /tmp/AuthKey.p8 -nocrypt -inform PEM -out /dev/null 2>/dev/null; then
              echo "‚úÖ OpenSSL parsed key OK"
            else
              echo "‚ö†Ô∏è OpenSSL couldn't parse key (will proceed anyway)"
            fi
          fi

          # Fetch signing certificates and provisioning profiles
          echo "üì° Fetching signing files from App Store Connect..."
          app-store-connect fetch-signing-files \
            "$BUNDLE_ID" \
            --issuer-id "$ISSUER_ID" \
            --key-id "$KEY_ID" \
            --private-key /tmp/AuthKey.p8 \
            --type IOS_APP_STORE \
            --create

      - name: Build signed IPA
        script: |
          echo "üöÄ Building iOS release IPA..."
          flutter build ipa --release --no-codesign

      - name: Upload to App Store Connect
        script: |
          echo "üì§ Uploading IPA to TestFlight..."
          app-store-connect publish \
            --path "build/ios/ipa/*.ipa" \
            --issuer-id "$ISSUER_ID" \
            --key-id "$KEY_ID" \
            --private-key /tmp/AuthKey.p8

    artifacts:
      - build/ios/ipa/*.ipa
      - /tmp/AuthKey.p8
