workflows:
  ios-release:
    name: iOS Release Build
    environment:
      groups:
        - appstore_credentials    # contains PRIVATE_KEY, ISSUER_ID, KEY_ID, etc.
      vars:
        BUNDLE_ID: "com.yourcompany.yourapp"
    scripts:
      - name: Setup automatic iOS code signing
        script: |
          #!/usr/bin/env bash
          set -e
          echo "üîê Setting up automatic iOS code signing..."

          # Safely decode base64 key into PEM file
          printf "%s" "$PRIVATE_KEY" | base64 --decode > /tmp/AuthKey.p8
          echo "‚úÖ AuthKey.p8 created at /tmp/AuthKey.p8"

          # Sanity checks
          echo "----- FILE CHECK -----"
          head -n5 /tmp/AuthKey.p8
          tail -n5 /tmp/AuthKey.p8
          wc -l /tmp/AuthKey.p8
          echo "----------------------"

          # Validate structure
          if ! head -n1 /tmp/AuthKey.p8 | grep -q "BEGIN PRIVATE KEY"; then
            echo "‚ùå PEM key invalid"
            exit 1
          fi
          if ! tail -n1 /tmp/AuthKey.p8 | grep -q "END PRIVATE KEY"; then
            echo "‚ùå PEM key incomplete"
            exit 1
          fi
          echo "‚úÖ PEM structure good"

          # Fetch signing files from App Store Connect
          app-store-connect fetch-signing-files \
            "$BUNDLE_ID" \
            --issuer-id "$ISSUER_ID" \
            --key-id "$KEY_ID" \
            --private-key /tmp/AuthKey.p8 \
            --type IOS_APP_STORE \
            --create

      - name: Flutter clean and pub get
        script: |
          flutter clean
          flutter pub get

      - name: Build iOS release
        script: |
          flutter build ipa --release --no-codesign

    artifacts:
      - build/ios/ipa/*.ipa
      - build/ios/ipa/*.dSYM.zip
      - /tmp/AuthKey.p8
    publishing:
      app_store_connect:
        api_key: $KEY_ID
        issuer_id: $ISSUER_ID
        key_content: $PRIVATE_KEY
