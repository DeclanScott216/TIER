workflows:
  ios_appstore:
    name: iOS App Store Workflow
    max_build_duration: 60
    environment:
      groups:
        - AppStoreConnect   # contains PRIVATE_KEY (base64), KEY_ID, ISSUER_ID, BUNDLE_ID
      flutter: stable
      xcode: latest
      cocoapods: default

    scripts:
      - name: Install dependencies
        script: |
          echo "üì¶ Installing dependencies..."
          flutter pub get
          cd ios
          pod install
          cd ..

      - name: Setup automatic iOS code signing
        script: |
          #!/usr/bin/env bash
          set -e
          echo "üîê Setting up automatic iOS code signing..."

          # Decode the base64-encoded private key into a file for verification
          echo "$PRIVATE_KEY" | base64 --decode > /tmp/AuthKey.p8
          echo "‚úÖ Decoded AuthKey.p8 created at /tmp/AuthKey.p8"

          # --- Debug info ---
          echo "üîπ First line:"; head -n1 /tmp/AuthKey.p8
          echo "üîπ Last line:"; tail -n1 /tmp/AuthKey.p8
          echo "üîπ Line count:"; wc -l /tmp/AuthKey.p8
          echo "üîπ Verify file format:"
          cat -n /tmp/AuthKey.p8 | sed -n l
          echo "üîπ Hex dump preview:"
          hexdump -C /tmp/AuthKey.p8 | head -n 20

          # Validate PEM format manually
          if ! head -n1 /tmp/AuthKey.p8 | grep -q "BEGIN PRIVATE KEY"; then
            echo "‚ùå ERROR: PEM key does not start with BEGIN PRIVATE KEY"
            exit 1
          fi
          if ! tail -n1 /tmp/AuthKey.p8 | grep -q "END PRIVATE KEY"; then
            echo "‚ùå ERROR: PEM key does not end with END PRIVATE KEY"
            exit 1
          fi
          echo "‚úÖ PEM key structure looks correct"

          # Test parse using OpenSSL to confirm key validity
          if openssl pkcs8 -in /tmp/AuthKey.p8 -nocrypt -inform PEM -out /dev/null 2>/dev/null; then
            echo "‚úÖ OpenSSL successfully parsed the key"
          else
            echo "‚ùå OpenSSL failed to parse key"
            exit 1
          fi

          echo "üîé Using credentials:"
          echo "  BUNDLE_ID: $BUNDLE_ID"
          echo "  ISSUER_ID: $ISSUER_ID"
          echo "  KEY_ID: $KEY_ID"

          # Fetch signing certificates and provisioning profiles using base64 key directly
          app-store-connect fetch-signing-files \
            "$BUNDLE_ID" \
            --issuer-id "$ISSUER_ID" \
            --key-id "$KEY_ID" \
            --private-key "$PRIVATE_KEY" \
            --type IOS_APP_STORE \
            --create

      - name: Build IPA
        script: |
          #!/usr/bin/env bash
          set -e
          echo "üì¶ Building iOS IPA..."
          flutter build ipa --release --no-codesign

    artifacts:
      - build/ios/ipa/*.ipa

    publishing:
      app_store_connect:
        api_key: $PRIVATE_KEY
        key_id: $KEY_ID
        issuer_id: $ISSUER_ID
